<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-4.0.xsd
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">	
          
    <bean id="dbConfigBean" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:com/bl/resources/db.properties</value>
            </list>
        </property>
    </bean>  
 
	<bean id="dbcpDataSource" class="org.apache.commons.dbcp.BasicDataSource" 
	   		destroy-method="close">
        <property name="driverClassName" value="${database.driverClassName}" />
        <property name="url" value="${database.url}" />
        <property name="username" value="${database.username}" />
        <property name="password" value="${database.password}" />
         <property name="initialSize" value="${database.initialSize}"/>  
         <!-- 连接池的最大值 -->  
         <property name="maxActive" value="${database.maxActive}"/>  
         <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->  
         <property name="maxIdle" value="${database.maxIdle}"/>  
         <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->  
         <property name="minIdle" value="${database.minIdle}"/>  
    </bean>
 	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
        abstract="false" lazy-init="false" autowire="default" >
        <constructor-arg >
            <ref bean="dbcpDataSource" />
        </constructor-arg>
    </bean>
	 <bean id="paramJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
        abstract="false" lazy-init="false" autowire="default" >
        <constructor-arg >
            <ref bean="dbcpDataSource" />
        </constructor-arg>
    </bean>
    <!-- @Repository("deviceDao") @Service @Controller("indexAction")  @Autowired  -->
   	<context:annotation-config/>
    <context:component-scan base-package="com.bl" />
    
    <bean id="txManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dbcpDataSource" />  
    </bean>  
      
    <tx:annotation-driven transaction-manager="txManager" />  
</beans>